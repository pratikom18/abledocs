<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Acrobat Security" xml:space="preserve">
    <value>Seguridad de Acrobat</value>
  </data>
  <data name="Add ADGateway" xml:space="preserve">
    <value>Agregar ADGateway</value>
  </data>
  <data name="Add Contact" xml:space="preserve">
    <value>Agregar contacto</value>
  </data>
  <data name="Add CSR" xml:space="preserve">
    <value>Agregar CSR</value>
  </data>
  <data name="Add Custom ADLegacy Settings" xml:space="preserve">
    <value>Agregar configuración de ADLegacy personalizada</value>
  </data>
  <data name="Add URL" xml:space="preserve">
    <value>Agregar URL</value>
  </data>
  <data name="Address Line 1" xml:space="preserve">
    <value>Dirección Línea 1</value>
  </data>
  <data name="Address Line 2" xml:space="preserve">
    <value>Línea de dirección 2</value>
  </data>
  <data name="ADGateway" xml:space="preserve">
    <value>ADGateway</value>
  </data>
  <data name="ADLegacy" xml:space="preserve">
    <value>ADLegacy</value>
  </data>
  <data name="ADScan" xml:space="preserve">
    <value>ADScan</value>
  </data>
  <data name="API Key" xml:space="preserve">
    <value>Clave API</value>
  </data>
  <data name="Billing" xml:space="preserve">
    <value>Facturación</value>
  </data>
  <data name="Billing Company" xml:space="preserve">
    <value>Compañía de facturación</value>
  </data>
  <data name="Billing Contact" xml:space="preserve">
    <value>Contacto de pagos</value>
  </data>
  <data name="Billing Mode" xml:space="preserve">
    <value>Modo de facturación</value>
  </data>
  <data name="City" xml:space="preserve">
    <value>Ciudad</value>
  </data>
  <data name="Client details save successfully" xml:space="preserve">
    <value>Los detalles del cliente se guardan correctamente</value>
  </data>
  <data name="Client Profile" xml:space="preserve">
    <value>Perfil del cliente</value>
  </data>
  <data name="Client Since" xml:space="preserve">
    <value>Cliente desde</value>
  </data>
  <data name="close" xml:space="preserve">
    <value>Cerca</value>
  </data>
  <data name="Code" xml:space="preserve">
    <value>Código</value>
  </data>
  <data name="Company" xml:space="preserve">
    <value>Empresa</value>
  </data>
  <data name="Contacts" xml:space="preserve">
    <value>Contactos</value>
  </data>
  <data name="CSR" xml:space="preserve">
    <value>RSE</value>
  </data>
  <data name="Currency" xml:space="preserve">
    <value>Divisa</value>
  </data>
  <data name="Custom Password" xml:space="preserve">
    <value>Contraseña personalizada</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Borrar</value>
  </data>
  <data name="Delivery Contact II" xml:space="preserve">
    <value>Contacto de entrega II</value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>Editar</value>
  </data>
  <data name="Email" xml:space="preserve">
    <value>Correo electrónico</value>
  </data>
  <data name="Hourly Rate" xml:space="preserve">
    <value>Tarifa por hora</value>
  </data>
  <data name="Job Settings" xml:space="preserve">
    <value>Configuración del trabajo</value>
  </data>
  <data name="Language" xml:space="preserve">
    <value>Idioma</value>
  </data>
  <data name="Logo ALT-Text" xml:space="preserve">
    <value>Texto ALT del logotipo</value>
  </data>
  <data name="Manage by office" xml:space="preserve">
    <value>Administrar por oficina</value>
  </data>
  <data name="Monthly Invoice" xml:space="preserve">
    <value>Factura mensual</value>
  </data>
  <data name="Name" xml:space="preserve">
    <value>Nombre</value>
  </data>
  <data name="Not Required" xml:space="preserve">
    <value>No requerido</value>
  </data>
  <data name="Note On Client" xml:space="preserve">
    <value>Nota sobre el cliente</value>
  </data>
  <data name="Notes" xml:space="preserve">
    <value>Notas</value>
  </data>
  <data name="Page Rate" xml:space="preserve">
    <value>Tasa de página</value>
  </data>
  <data name="Per Job" xml:space="preserve">
    <value>Por trabajo</value>
  </data>
  <data name="PO" xml:space="preserve">
    <value>Correos</value>
  </data>
  <data name="PO Required" xml:space="preserve">
    <value>PO requerido</value>
  </data>
  <data name="Postal Code" xml:space="preserve">
    <value>Código postal</value>
  </data>
  <data name="Required" xml:space="preserve">
    <value>Requerida</value>
  </data>
  <data name="Sales Representative" xml:space="preserve">
    <value>Representante de ventas</value>
  </data>
  <data name="Save" xml:space="preserve">
    <value>Ahorrar</value>
  </data>
  <data name="Save All Alt" xml:space="preserve">
    <value>Guardar todo Alt</value>
  </data>
  <data name="Security" xml:space="preserve">
    <value>Seguridad</value>
  </data>
  <data name="Select" xml:space="preserve">
    <value>Seleccione</value>
  </data>
  <data name="Select Country" xml:space="preserve">
    <value>Seleccionar país</value>
  </data>
  <data name="Select Office" xml:space="preserve">
    <value>Seleccionar oficina</value>
  </data>
  <data name="Select state" xml:space="preserve">
    <value>Seleccione estado</value>
  </data>
  <data name="Tagging Instructions" xml:space="preserve">
    <value>Instrucciones de etiquetado</value>
  </data>
  <data name="Terms" xml:space="preserve">
    <value>Condiciones</value>
  </data>
  <data name="Upload Figure Tags" xml:space="preserve">
    <value>Cargar etiquetas de figura</value>
  </data>
  <data name="URL" xml:space="preserve">
    <value>URL</value>
  </data>
</root>