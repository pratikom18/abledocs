@using Microsoft.AspNetCore.Mvc.Localization
@inject IViewLocalizer Localizer
@model Users
@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@*<div class="modal" id="myModal">*@
<div class="modal fade" id="bootstrap-modal1" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">

            <!-- Modal Header -->
            <div class="modal-header">
                <h4 class="modal-title">@Localizer["Change Password"]</h4>
                <button type="button" class="close" data-dismiss="modal">&times;</button>
            </div>

            <!-- Modal body -->
            <div class="modal-body">
                <form method="post" id="passwordForm">
                    <input type="hidden" asp-for="ID" />
                    <div class="row">
                        <div class="form-group col-sm-3"><label for="CurrentPassword" class="col-form-label">@Localizer["Current Password"]<span class="text-danger">*</span></label></div>

                        <div class="form-group col-sm-9">
                            <input type="password" name="CurrentPassword" class="form-control" id="CurrentPassword" placeholder=@Localizer["Current Password"] autocomplete="off">

                        </div>
                    </div>
                    <div class="row">
                        <div class="form-group col-sm-3"><label for="NewPassword" class="col-form-label">@Localizer["New Password"]<span class="text-danger">*</span></label></div>

                        <div class="form-group col-sm-9">
                            <input type="password" name="NewPassword" class="form-control" id="NewPassword" placeholder=@Localizer["New Password"] autocomplete="off">

                        </div>
                    </div>
                    <div class="row">
                        <div class="form-group col-sm-3"><label for="ConfirmPassword" class="col-form-label">@Localizer["Confirm Password"]<span class="text-danger">*</span></label></div>

                        <div class="form-group col-sm-9">
                            <input type="password" name="ConfirmPassword" class="form-control" id="ConfirmPassword" placeholder=@Localizer["Confirm Password"] autocomplete="off">

                        </div>
                    </div>


                    <!-- Modal footer -->
                    <div class="modal-footer">
                        <button type="button" class="btn btn-primary-1" id="UpdatePasswordBtn">@Localizer["Save"]</button>
                        &nbsp;&nbsp;
                        <button type="button" class="btn btn-danger" data-dismiss="modal">@Localizer["Close"]</button>
                    </div>
                </form>

            </div>

        </div>
    </div>
</div>
@{
    <script>
        var validator1 = $('#passwordForm').validate({
            rules:
            {
                CurrentPassword:
                {
                    required: true
                },
                NewPassword:
                {
                    required: true
                },

                ConfirmPassword: {
                    required: true,
                    equalTo: "#NewPassword"
                },

            },
            /*messages: {
                FirstName: {
                    required: "First name is required."
                },
                LastName: {
                    required: "Last name is required."
                },
                Username: {
                    required: "User name is required."
                },

                Title: {
                    required: "Title is required."
                }
            },*/
            errorElement: 'span',
            errorPlacement: function (error, element) {
                error.addClass('invalid-feedback');
                element.closest('.form-group').append(error);

            },
            highlight: function (element, errorClass, validClass) {
                $(element).addClass('is-invalid');
            },
            unhighlight: function (element, errorClass, validClass) {
                $(element).removeClass('is-invalid');
            },
            invalidHandler: function (form, validator) {
                var errors = validator.numberOfInvalids();
                if (errors) {
                    validator.errorList[0].element.focus();
                }
            },

        });




    </script>
}

