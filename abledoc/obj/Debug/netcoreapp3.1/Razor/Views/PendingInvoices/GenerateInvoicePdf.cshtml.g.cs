#pragma checksum "D:\Project\abledocs\abledoc\Views\PendingInvoices\GenerateInvoicePdf.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "f2a1c22bd04cde09ab051d88b4130f473b3b4ef7"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_PendingInvoices_GenerateInvoicePdf), @"mvc.1.0.view", @"/Views/PendingInvoices/GenerateInvoicePdf.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "D:\Project\abledocs\abledoc\Views\_ViewImports.cshtml"
using abledoc;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\Project\abledocs\abledoc\Views\_ViewImports.cshtml"
using abledoc.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 1 "D:\Project\abledocs\abledoc\Views\PendingInvoices\GenerateInvoicePdf.cshtml"
using Microsoft.AspNetCore.Mvc.Localization;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"f2a1c22bd04cde09ab051d88b4130f473b3b4ef7", @"/Views/PendingInvoices/GenerateInvoicePdf.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"a4541238ecace9825e26c3b3c9bf67b64ce13ac7", @"/Views/_ViewImports.cshtml")]
    public class Views_PendingInvoices_GenerateInvoicePdf : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<GenerateInvoicePdf>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("alt", new global::Microsoft.AspNetCore.Html.HtmlString("AdminLTE Logo"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("src", new global::Microsoft.AspNetCore.Html.HtmlString("~/Resources/Images/Logo/able_top.png"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("style", new global::Microsoft.AspNetCore.Html.HtmlString("width:50%"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("classname"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("style", new global::Microsoft.AspNetCore.Html.HtmlString("color:black"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper;
        private global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#nullable restore
#line 4 "D:\Project\abledocs\abledoc\Views\PendingInvoices\GenerateInvoicePdf.cshtml"
   Layout = null; 

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "D:\Project\abledocs\abledoc\Views\PendingInvoices\GenerateInvoicePdf.cshtml"
  

    string currencyInfo = string.Empty;
    decimal subTotal = 0;
    string str = string.Empty;
    string currency = string.Empty;

    Countries objCounntry = new Countries();
    objCounntry.code = Model.clients.Country;
    var modelCountry = objCounntry.GetCountryByCode();
    var country_currency_symbol = "$";
    var country_currency_code = "USD";
    if (modelCountry != null)
    {
        country_currency_symbol = modelCountry.currency;
        country_currency_code = modelCountry.currency_code;
    }

    string provinceid = null;
    if (Model.clients.stateid.ToString() != "" || Model.clients.stateid.ToString() != null)
    {
        provinceid = Model.clients.stateid.ToString();
    }

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n<!DOCTYPE html>\r\n<html>\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("head", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "f2a1c22bd04cde09ab051d88b4130f473b3b4ef76485", async() => {
                WriteLiteral("\r\n    <style type=\"text/css\">\r\n        ");
                WriteLiteral(@"@font-face {
            font-family: 'dejavu';
            src: url('/fonts/DejaVuSansCondensed.ttf');
        }

        .classname {
            font-family: 'dejavu';
        }

        .table, .th, .td {
            border: 1px solid #0A81C4;
            border-collapse: collapse;
        }
    </style>

");
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.HeadTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_HeadTagHelper);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("body", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "f2a1c22bd04cde09ab051d88b4130f473b3b4ef77854", async() => {
                WriteLiteral("\r\n    <table style=\"width: 100%;\">\r\n        <tr>\r\n            <td>\r\n                <a href=\"http://www.evopdf.com\">\r\n                    ");
                __tagHelperExecutionContext = __tagHelperScopeManager.Begin("img", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.SelfClosing, "f2a1c22bd04cde09ab051d88b4130f473b3b4ef78260", async() => {
                }
                );
                __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.UrlResolutionTagHelper>();
                __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_UrlResolutionTagHelper);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_0);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
                __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
                await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
                if (!__tagHelperExecutionContext.Output.IsContentModified)
                {
                    await __tagHelperExecutionContext.SetOutputContentAsync();
                }
                Write(__tagHelperExecutionContext.Output);
                __tagHelperExecutionContext = __tagHelperScopeManager.End();
                WriteLiteral("\r\n                </a>\r\n            </td>\r\n            <td style=\"text-align:right;\">\r\n                <span class=\"classname\" style=\"color:#0A81C4;font-size: 18px; font-weight: bold;\">");
#nullable restore
#line 59 "D:\Project\abledocs\abledoc\Views\PendingInvoices\GenerateInvoicePdf.cshtml"
                                                                                             Write(Localizer["CompanyName"].Value);

#line default
#line hidden
#nullable disable
                WriteLiteral("</span><br />\r\n                <span class=\"classname\" style=\"font-size:14px;\">\r\n                    ");
#nullable restore
#line 61 "D:\Project\abledocs\abledoc\Views\PendingInvoices\GenerateInvoicePdf.cshtml"
               Write(Localizer["Address"]);

#line default
#line hidden
#nullable disable
                WriteLiteral("\r\n                    <br /><br />\r\n                    P: ");
#nullable restore
#line 63 "D:\Project\abledocs\abledoc\Views\PendingInvoices\GenerateInvoicePdf.cshtml"
                  Write(Localizer["Telephone"].Value);

#line default
#line hidden
#nullable disable
                WriteLiteral(" <br />\r\n                    E: ");
#nullable restore
#line 64 "D:\Project\abledocs\abledoc\Views\PendingInvoices\GenerateInvoicePdf.cshtml"
                  Write(Localizer["BillingEmail"].Value);

#line default
#line hidden
#nullable disable
                WriteLiteral(" <br />\r\n                    <br />\r\n                    <br />\r\n                    <br />\r\n                    ");
#nullable restore
#line 68 "D:\Project\abledocs\abledoc\Views\PendingInvoices\GenerateInvoicePdf.cshtml"
               Write(Localizer["Date"].Value);

#line default
#line hidden
#nullable disable
                WriteLiteral(": ");
#nullable restore
#line 68 "D:\Project\abledocs\abledoc\Views\PendingInvoices\GenerateInvoicePdf.cshtml"
                                         Write(Model.currentDate.ToShortDateString());

#line default
#line hidden
#nullable disable
                WriteLiteral("\r\n                    <br />\r\n");
#nullable restore
#line 70 "D:\Project\abledocs\abledoc\Views\PendingInvoices\GenerateInvoicePdf.cshtml"
                     if (Model.CreditNoteFlag == 1 && Model.State == "CreditNoteEmailSend")
                    {
                        

#line default
#line hidden
#nullable disable
#nullable restore
#line 72 "D:\Project\abledocs\abledoc\Views\PendingInvoices\GenerateInvoicePdf.cshtml"
                    Write(Localizer["Credit"].Value + ": #" + Model.creditMemoIDQB);

#line default
#line hidden
#nullable disable
#nullable restore
#line 72 "D:\Project\abledocs\abledoc\Views\PendingInvoices\GenerateInvoicePdf.cshtml"
                                                                                   ;
                    }
                    else if (Model.State == "InvoiceEmailSend" || Model.invoiceInstance.InvoiceIDQB != 0)
                    {
                        

#line default
#line hidden
#nullable disable
#nullable restore
#line 76 "D:\Project\abledocs\abledoc\Views\PendingInvoices\GenerateInvoicePdf.cshtml"
                    Write(Localizer["Invoice"].Value + ": #" + Model.invoiceInstance.InvoiceIDQB);

#line default
#line hidden
#nullable disable
#nullable restore
#line 76 "D:\Project\abledocs\abledoc\Views\PendingInvoices\GenerateInvoicePdf.cshtml"
                                                                                                 ;
                    }

#line default
#line hidden
#nullable disable
                WriteLiteral("                    <br />\r\n                    ");
#nullable restore
#line 79 "D:\Project\abledocs\abledoc\Views\PendingInvoices\GenerateInvoicePdf.cshtml"
                Write(Localizer["Engagement"].Value + ": #" + Model.EngagementNum);

#line default
#line hidden
#nullable disable
                WriteLiteral(";\r\n                </span>\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td style=\"text-align:right;\" colspan=\"2\">\r\n");
#nullable restore
#line 85 "D:\Project\abledocs\abledoc\Views\PendingInvoices\GenerateInvoicePdf.cshtml"
                 if (Model.CreditNoteFlag == 1)
                {

#line default
#line hidden
#nullable disable
                WriteLiteral("                    <span class=\"classname\" style=\"font-size: 20px; font-weight: bold;\">");
#nullable restore
#line 87 "D:\Project\abledocs\abledoc\Views\PendingInvoices\GenerateInvoicePdf.cshtml"
                                                                                   Write(Localizer["Credit"].Value);

#line default
#line hidden
#nullable disable
                WriteLiteral("</span>\r\n");
#nullable restore
#line 88 "D:\Project\abledocs\abledoc\Views\PendingInvoices\GenerateInvoicePdf.cshtml"
                }
                else
                {

#line default
#line hidden
#nullable disable
                WriteLiteral("                    <span class=\"classname\" style=\"font-size: 20px; font-weight: bold;\">");
#nullable restore
#line 91 "D:\Project\abledocs\abledoc\Views\PendingInvoices\GenerateInvoicePdf.cshtml"
                                                                                   Write(Localizer["Invoice"].Value);

#line default
#line hidden
#nullable disable
                WriteLiteral("</span>\r\n");
#nullable restore
#line 92 "D:\Project\abledocs\abledoc\Views\PendingInvoices\GenerateInvoicePdf.cshtml"
                }

#line default
#line hidden
#nullable disable
                WriteLiteral("\r\n            </td>\r\n        </tr>\r\n        <tr>\r\n            <td colspan=\"2\" style=\"border-top:1px solid #0A81C4;\"></td>\r\n        </tr>\r\n        <tr>\r\n");
#nullable restore
#line 100 "D:\Project\abledocs\abledoc\Views\PendingInvoices\GenerateInvoicePdf.cshtml"
             if (Model.BillingContact != null)
            {

#line default
#line hidden
#nullable disable
                WriteLiteral("                <td style=\"text-align:left;\">\r\n                    <span class=\"classname\" style=\"font-size: 16px;\">\r\n                        <b>");
#nullable restore
#line 104 "D:\Project\abledocs\abledoc\Views\PendingInvoices\GenerateInvoicePdf.cshtml"
                      Write(Localizer["BillingContact"].Value);

#line default
#line hidden
#nullable disable
                WriteLiteral(":</b><br />\r\n                        ");
#nullable restore
#line 105 "D:\Project\abledocs\abledoc\Views\PendingInvoices\GenerateInvoicePdf.cshtml"
                   Write(Model.BillingContact.FirstName);

#line default
#line hidden
#nullable disable
                WriteLiteral(" ");
#nullable restore
#line 105 "D:\Project\abledocs\abledoc\Views\PendingInvoices\GenerateInvoicePdf.cshtml"
                                                   Write(Model.BillingContact.LastName);

#line default
#line hidden
#nullable disable
                WriteLiteral("<br />\r\n                        ");
#nullable restore
#line 106 "D:\Project\abledocs\abledoc\Views\PendingInvoices\GenerateInvoicePdf.cshtml"
                   Write(Model.invoiceInstance.CompanyName);

#line default
#line hidden
#nullable disable
                WriteLiteral("<br />\r\n                        ");
#nullable restore
#line 107 "D:\Project\abledocs\abledoc\Views\PendingInvoices\GenerateInvoicePdf.cshtml"
                   Write(Model.BillingContact.Address1);

#line default
#line hidden
#nullable disable
                WriteLiteral(" ");
#nullable restore
#line 107 "D:\Project\abledocs\abledoc\Views\PendingInvoices\GenerateInvoicePdf.cshtml"
                                                  Write(Model.BillingContact.Address2);

#line default
#line hidden
#nullable disable
                WriteLiteral("<br />\r\n                        ");
#nullable restore
#line 108 "D:\Project\abledocs\abledoc\Views\PendingInvoices\GenerateInvoicePdf.cshtml"
                   Write(Model.BillingContact.City);

#line default
#line hidden
#nullable disable
                WriteLiteral(", ");
#nullable restore
#line 108 "D:\Project\abledocs\abledoc\Views\PendingInvoices\GenerateInvoicePdf.cshtml"
                                               Write(Model.BillingContact.Province);

#line default
#line hidden
#nullable disable
                WriteLiteral(", ");
#nullable restore
#line 108 "D:\Project\abledocs\abledoc\Views\PendingInvoices\GenerateInvoicePdf.cshtml"
                                                                               Write(Model.BillingContact.PostalCode);

#line default
#line hidden
#nullable disable
                WriteLiteral(", ");
#nullable restore
#line 108 "D:\Project\abledocs\abledoc\Views\PendingInvoices\GenerateInvoicePdf.cshtml"
                                                                                                                 Write(Model.BillingContact.Country);

#line default
#line hidden
#nullable disable
                WriteLiteral("<br />\r\n                        ");
#nullable restore
#line 109 "D:\Project\abledocs\abledoc\Views\PendingInvoices\GenerateInvoicePdf.cshtml"
                   Write(Model.BillingContact.Email);

#line default
#line hidden
#nullable disable
                WriteLiteral("<br />\r\n                        ");
#nullable restore
#line 110 "D:\Project\abledocs\abledoc\Views\PendingInvoices\GenerateInvoicePdf.cshtml"
                   Write(Model.BillingContact.Telephone);

#line default
#line hidden
#nullable disable
                WriteLiteral("\r\n                    </span>\r\n                </td>\r\n");
#nullable restore
#line 113 "D:\Project\abledocs\abledoc\Views\PendingInvoices\GenerateInvoicePdf.cshtml"
            }

#line default
#line hidden
#nullable disable
#nullable restore
#line 114 "D:\Project\abledocs\abledoc\Views\PendingInvoices\GenerateInvoicePdf.cshtml"
             if (Model.MainContact != null)
            {

#line default
#line hidden
#nullable disable
                WriteLiteral("                <td style=\"text-align:left;\">\r\n                    <span class=\"classname\" style=\"font-size: 16px;\">\r\n                        <b>");
#nullable restore
#line 118 "D:\Project\abledocs\abledoc\Views\PendingInvoices\GenerateInvoicePdf.cshtml"
                      Write(Localizer["Contact"].Value);

#line default
#line hidden
#nullable disable
                WriteLiteral(":</b><br />\r\n                        ");
#nullable restore
#line 119 "D:\Project\abledocs\abledoc\Views\PendingInvoices\GenerateInvoicePdf.cshtml"
                   Write(Model.MainContact.FirstName);

#line default
#line hidden
#nullable disable
                WriteLiteral(" ");
#nullable restore
#line 119 "D:\Project\abledocs\abledoc\Views\PendingInvoices\GenerateInvoicePdf.cshtml"
                                                Write(Model.MainContact.LastName);

#line default
#line hidden
#nullable disable
                WriteLiteral("<br />\r\n                        ");
#nullable restore
#line 120 "D:\Project\abledocs\abledoc\Views\PendingInvoices\GenerateInvoicePdf.cshtml"
                   Write(Model.invoiceInstance.CompanyName);

#line default
#line hidden
#nullable disable
                WriteLiteral("<br />\r\n                        ");
#nullable restore
#line 121 "D:\Project\abledocs\abledoc\Views\PendingInvoices\GenerateInvoicePdf.cshtml"
                   Write(Model.MainContact.Address1);

#line default
#line hidden
#nullable disable
                WriteLiteral(" ");
#nullable restore
#line 121 "D:\Project\abledocs\abledoc\Views\PendingInvoices\GenerateInvoicePdf.cshtml"
                                               Write(Model.MainContact.Address2);

#line default
#line hidden
#nullable disable
                WriteLiteral("<br />\r\n                        ");
#nullable restore
#line 122 "D:\Project\abledocs\abledoc\Views\PendingInvoices\GenerateInvoicePdf.cshtml"
                   Write(Model.MainContact.City);

#line default
#line hidden
#nullable disable
                WriteLiteral(", ");
#nullable restore
#line 122 "D:\Project\abledocs\abledoc\Views\PendingInvoices\GenerateInvoicePdf.cshtml"
                                            Write(Model.MainContact.Province);

#line default
#line hidden
#nullable disable
                WriteLiteral(", ");
#nullable restore
#line 122 "D:\Project\abledocs\abledoc\Views\PendingInvoices\GenerateInvoicePdf.cshtml"
                                                                         Write(Model.MainContact.PostalCode);

#line default
#line hidden
#nullable disable
                WriteLiteral(", ");
#nullable restore
#line 122 "D:\Project\abledocs\abledoc\Views\PendingInvoices\GenerateInvoicePdf.cshtml"
                                                                                                        Write(Model.MainContact.Country);

#line default
#line hidden
#nullable disable
                WriteLiteral("<br />\r\n                        ");
#nullable restore
#line 123 "D:\Project\abledocs\abledoc\Views\PendingInvoices\GenerateInvoicePdf.cshtml"
                   Write(Model.MainContact.Email);

#line default
#line hidden
#nullable disable
                WriteLiteral("<br />\r\n                        ");
#nullable restore
#line 124 "D:\Project\abledocs\abledoc\Views\PendingInvoices\GenerateInvoicePdf.cshtml"
                   Write(Model.MainContact.Telephone);

#line default
#line hidden
#nullable disable
                WriteLiteral("\r\n                    </span>\r\n                </td>\r\n");
#nullable restore
#line 127 "D:\Project\abledocs\abledoc\Views\PendingInvoices\GenerateInvoicePdf.cshtml"
            }

#line default
#line hidden
#nullable disable
                WriteLiteral("\r\n        </tr>\r\n        <tr>\r\n            <td colspan=\"2\" style=\"border-top:1px solid #0A81C4;\"></td>\r\n        </tr>\r\n        <tr>\r\n            <td style=\"text-align:left;\" colspan=\"2\">\r\n                <span class=\"classname\" style=\"font-size: 16px;\">\r\n");
#nullable restore
#line 136 "D:\Project\abledocs\abledoc\Views\PendingInvoices\GenerateInvoicePdf.cshtml"
                     if (!string.IsNullOrEmpty(Model.clients.POText))
                    {
                        

#line default
#line hidden
#nullable disable
#nullable restore
#line 138 "D:\Project\abledocs\abledoc\Views\PendingInvoices\GenerateInvoicePdf.cshtml"
                    Write(Localizer["PO"].Value + ": " + Model.clients.POText);

#line default
#line hidden
#nullable disable
                WriteLiteral("                        <br />\r\n");
#nullable restore
#line 140 "D:\Project\abledocs\abledoc\Views\PendingInvoices\GenerateInvoicePdf.cshtml"
                    }

#line default
#line hidden
#nullable disable
#nullable restore
#line 141 "D:\Project\abledocs\abledoc\Views\PendingInvoices\GenerateInvoicePdf.cshtml"
                     if (!string.IsNullOrEmpty(Model.clients.ContractDate))
                    {
                        

#line default
#line hidden
#nullable disable
#nullable restore
#line 143 "D:\Project\abledocs\abledoc\Views\PendingInvoices\GenerateInvoicePdf.cshtml"
                    Write(Localizer["ContractDate"].Value + ": " + Model.clients.ContractDate);

#line default
#line hidden
#nullable disable
#nullable restore
#line 143 "D:\Project\abledocs\abledoc\Views\PendingInvoices\GenerateInvoicePdf.cshtml"
                                                                                              
                    }

#line default
#line hidden
#nullable disable
                WriteLiteral(@"
                </span>
            </td>
        </tr>
        <tr>
            <td colspan=""2"">
                <br />
                <br />
                <table class=""table"" style=""border-color:#0A81C4;width:100%"">
                    <tr class=""classname"" style=""color:white;background-color:#0A81C4;border-color:#0A81C4;font-size:14px;font-weight:bold"">
                        <td style=""border-color:#0A81C4;text-align:left;"">");
#nullable restore
#line 155 "D:\Project\abledocs\abledoc\Views\PendingInvoices\GenerateInvoicePdf.cshtml"
                                                                     Write(Localizer["Description"].Value);

#line default
#line hidden
#nullable disable
                WriteLiteral("</td>\r\n                        <td style=\"border-color:#0A81C4;text-align:center;\">");
#nullable restore
#line 156 "D:\Project\abledocs\abledoc\Views\PendingInvoices\GenerateInvoicePdf.cshtml"
                                                                       Write(Localizer["Quantity"].Value);

#line default
#line hidden
#nullable disable
                WriteLiteral("</td>\r\n                        <td style=\"border-color:#0A81C4;text-align:center;\">");
#nullable restore
#line 157 "D:\Project\abledocs\abledoc\Views\PendingInvoices\GenerateInvoicePdf.cshtml"
                                                                       Write(Localizer["Unit"].Value);

#line default
#line hidden
#nullable disable
                WriteLiteral("</td>\r\n                        <td style=\"border-color:#0A81C4;text-align:right;\">");
#nullable restore
#line 158 "D:\Project\abledocs\abledoc\Views\PendingInvoices\GenerateInvoicePdf.cshtml"
                                                                       Write(Localizer["UnitPrice"].Value);

#line default
#line hidden
#nullable disable
                WriteLiteral("(");
#nullable restore
#line 158 "D:\Project\abledocs\abledoc\Views\PendingInvoices\GenerateInvoicePdf.cshtml"
                                                                                                      Write(country_currency_symbol);

#line default
#line hidden
#nullable disable
                WriteLiteral(")</td>\r\n                        <td style=\"border-color:#0A81C4;text-align:right;\">");
#nullable restore
#line 159 "D:\Project\abledocs\abledoc\Views\PendingInvoices\GenerateInvoicePdf.cshtml"
                                                                       Write(Localizer["Total"].Value);

#line default
#line hidden
#nullable disable
                WriteLiteral("(");
#nullable restore
#line 159 "D:\Project\abledocs\abledoc\Views\PendingInvoices\GenerateInvoicePdf.cshtml"
                                                                                                  Write(country_currency_symbol);

#line default
#line hidden
#nullable disable
                WriteLiteral(")</td>\r\n                    </tr>\r\n");
#nullable restore
#line 161 "D:\Project\abledocs\abledoc\Views\PendingInvoices\GenerateInvoicePdf.cshtml"
                      


                        decimal taxRate = 0;
                        string taxText = string.Empty;
                        if (Model.invoiceTmpList != null)
                        {

                            foreach (var row in Model.invoiceTmpList)
                            {
                                if (Model.CreditNoteFlag == 1 && row.Quantity == 0)
                                {
                                    continue;
                                }

                                currencyInfo = row.Tax;
                                taxText = row.Tax;

#line default
#line hidden
#nullable disable
                WriteLiteral("                                <tr class=\"classname\" style=\"font-size:14px;\">\r\n                                    <td class=\"td\" style=\"text-align: left;\">\r\n                                        ");
#nullable restore
#line 180 "D:\Project\abledocs\abledoc\Views\PendingInvoices\GenerateInvoicePdf.cshtml"
                                   Write(row.Description.Replace("/[\n\r]/", ","));

#line default
#line hidden
#nullable disable
                WriteLiteral("\r\n                                    </td>\r\n                                    <td class=\"td\" style=\"text-align: center;\">\r\n                                        ");
#nullable restore
#line 183 "D:\Project\abledocs\abledoc\Views\PendingInvoices\GenerateInvoicePdf.cshtml"
                                   Write(row.Quantity);

#line default
#line hidden
#nullable disable
                WriteLiteral("\r\n                                    </td>\r\n                                    <td class=\"td\" style=\"text-align: center;\">\r\n                                        ");
#nullable restore
#line 186 "D:\Project\abledocs\abledoc\Views\PendingInvoices\GenerateInvoicePdf.cshtml"
                                   Write(row.PricePer);

#line default
#line hidden
#nullable disable
                WriteLiteral("\r\n                                    </td>\r\n                                    <td class=\"td\" style=\"text-align: right;\">\r\n                                        ");
#nullable restore
#line 189 "D:\Project\abledocs\abledoc\Views\PendingInvoices\GenerateInvoicePdf.cshtml"
                                    Write(country_currency_symbol+""+row.Price);

#line default
#line hidden
#nullable disable
                WriteLiteral("\r\n                                    </td>\r\n");
#nullable restore
#line 191 "D:\Project\abledocs\abledoc\Views\PendingInvoices\GenerateInvoicePdf.cshtml"
                                      
                                        var total = (row.Price * row.Quantity);
                                        subTotal = subTotal + abledoc.Utility.CommonHelper.GetDBDecimal((row.Price * row.Quantity));
                                    

#line default
#line hidden
#nullable disable
                WriteLiteral("\r\n                                    <td class=\"td\" style=\"text-align: right;\">\r\n");
#nullable restore
#line 197 "D:\Project\abledocs\abledoc\Views\PendingInvoices\GenerateInvoicePdf.cshtml"
                                         if (Model.CreditNoteFlag == 1)
                                        {
                                            

#line default
#line hidden
#nullable disable
#nullable restore
#line 199 "D:\Project\abledocs\abledoc\Views\PendingInvoices\GenerateInvoicePdf.cshtml"
                                        Write("-"+ country_currency_symbol+"" + total.ToString("#,##0.00"));

#line default
#line hidden
#nullable disable
#nullable restore
#line 199 "D:\Project\abledocs\abledoc\Views\PendingInvoices\GenerateInvoicePdf.cshtml"
                                                                                                           
                                        }
                                        else
                                        {
                                            

#line default
#line hidden
#nullable disable
#nullable restore
#line 203 "D:\Project\abledocs\abledoc\Views\PendingInvoices\GenerateInvoicePdf.cshtml"
                                        Write(country_currency_symbol + "" + total.ToString("#,##0.00"));

#line default
#line hidden
#nullable disable
#nullable restore
#line 203 "D:\Project\abledocs\abledoc\Views\PendingInvoices\GenerateInvoicePdf.cshtml"
                                                                                                        
                                        }

#line default
#line hidden
#nullable disable
                WriteLiteral("\r\n                                    </td>\r\n\r\n                                </tr>\r\n");
#nullable restore
#line 209 "D:\Project\abledocs\abledoc\Views\PendingInvoices\GenerateInvoicePdf.cshtml"

                            }
                        }
                    

#line default
#line hidden
#nullable disable
#nullable restore
#line 213 "D:\Project\abledocs\abledoc\Views\PendingInvoices\GenerateInvoicePdf.cshtml"
                      
                        string[] currencyInfo1 = currencyInfo.Split(" ");
                        if (currencyInfo1[0] == "US")
                        {
                            currency = "USD";
                            int usInvoiceFlag = 1;
                        }
                        else if (currencyInfo1[0] == "No")
                        {
                            // Getting the Currency
                            currency = Model.clients.Currency;

                        }
                        else
                        {
                            currency = "CAD";
                        }

                    

#line default
#line hidden
#nullable disable
#nullable restore
#line 232 "D:\Project\abledocs\abledoc\Views\PendingInvoices\GenerateInvoicePdf.cshtml"
                      
                        var modelJobPopulate = new JobQuoteAutopopulate().GetJobPopulateList(Model.clients.Country,provinceid);
                        if (modelJobPopulate != null)
                        {
                            if (modelJobPopulate.Count > 0)
                            {

                                foreach (var row in new JobQuoteAutopopulate().GetJobPopulateList(Model.clients.Country, provinceid))
                                {

                                    if (taxText == row.Information)
                                    {
                                        taxRate = @row.tax;
                                    }
                                }
                            }
                        }

                    

#line default
#line hidden
#nullable disable
                WriteLiteral("                    <tr class=\"classname\" style=\"font-size:14px;\">\r\n                        <td class=\"td\" rowspan=\"3\" colspan=\"3\">\r\n                            <span>");
#nullable restore
#line 253 "D:\Project\abledocs\abledoc\Views\PendingInvoices\GenerateInvoicePdf.cshtml"
                             Write(Localizer["TermsText"].Value);

#line default
#line hidden
#nullable disable
                WriteLiteral("</span>\r\n                            <br />\r\n                            <span>");
#nullable restore
#line 255 "D:\Project\abledocs\abledoc\Views\PendingInvoices\GenerateInvoicePdf.cshtml"
                             Write(Localizer["PricesInCurrency"].Value);

#line default
#line hidden
#nullable disable
                WriteLiteral(" ");
#nullable restore
#line 255 "D:\Project\abledocs\abledoc\Views\PendingInvoices\GenerateInvoicePdf.cshtml"
                                                                  Write(country_currency_code);

#line default
#line hidden
#nullable disable
                WriteLiteral("</span>\r\n                        </td>\r\n                        <td class=\"td\" style=\"text-align:right;font-size:16px;font-weight:bold;\">");
#nullable restore
#line 257 "D:\Project\abledocs\abledoc\Views\PendingInvoices\GenerateInvoicePdf.cshtml"
                                                                                            Write(Localizer["SubTotal"].Value);

#line default
#line hidden
#nullable disable
                WriteLiteral("</td>\r\n                        <td class=\"td\" style=\"text-align:right;font-size:16px;font-weight:bold;\">\r\n");
#nullable restore
#line 259 "D:\Project\abledocs\abledoc\Views\PendingInvoices\GenerateInvoicePdf.cshtml"
                             if (Model.CreditNoteFlag == 1)
                            {
                                

#line default
#line hidden
#nullable disable
#nullable restore
#line 261 "D:\Project\abledocs\abledoc\Views\PendingInvoices\GenerateInvoicePdf.cshtml"
                            Write("-"+ country_currency_symbol + "" + subTotal.ToString("#,##0.00"));

#line default
#line hidden
#nullable disable
#nullable restore
#line 261 "D:\Project\abledocs\abledoc\Views\PendingInvoices\GenerateInvoicePdf.cshtml"
                                                                                                    ;
                            }
                            else
                            {
                                

#line default
#line hidden
#nullable disable
#nullable restore
#line 265 "D:\Project\abledocs\abledoc\Views\PendingInvoices\GenerateInvoicePdf.cshtml"
                            Write(country_currency_symbol + "" + subTotal.ToString("#,##0.00"));

#line default
#line hidden
#nullable disable
#nullable restore
#line 265 "D:\Project\abledocs\abledoc\Views\PendingInvoices\GenerateInvoicePdf.cshtml"
                                                                                               ;
                            }

#line default
#line hidden
#nullable disable
                WriteLiteral("\r\n                        </td>\r\n\r\n                    </tr>\r\n                    <tr class=\"classname\">\r\n                        <td class=\"td\" style=\"text-align:right;font-size:16px;\">\r\n                            ");
#nullable restore
#line 273 "D:\Project\abledocs\abledoc\Views\PendingInvoices\GenerateInvoicePdf.cshtml"
                       Write(taxText);

#line default
#line hidden
#nullable disable
                WriteLiteral("\r\n                        </td>\r\n                        <td class=\"td\" style=\"text-align:right;font-size:16px;\">\r\n");
#nullable restore
#line 276 "D:\Project\abledocs\abledoc\Views\PendingInvoices\GenerateInvoicePdf.cshtml"
                              

                                decimal taxTotal = abledoc.Utility.CommonHelper.GetDBDecimal((abledoc.Utility.CommonHelper.GetDBDecimal(taxRate) * subTotal) / 100);
                                

#line default
#line hidden
#nullable disable
#nullable restore
#line 279 "D:\Project\abledocs\abledoc\Views\PendingInvoices\GenerateInvoicePdf.cshtml"
                            Write(country_currency_symbol+""+taxTotal.ToString("#,##0.00"));

#line default
#line hidden
#nullable disable
#nullable restore
#line 279 "D:\Project\abledocs\abledoc\Views\PendingInvoices\GenerateInvoicePdf.cshtml"
                                                                                           ;
                            

#line default
#line hidden
#nullable disable
                WriteLiteral("                        </td>\r\n                    </tr>\r\n                    <tr class=\"classname\">\r\n                        <td class=\"td\" style=\"text-align:right;font-size:16px;font-weight:bold;\">");
#nullable restore
#line 284 "D:\Project\abledocs\abledoc\Views\PendingInvoices\GenerateInvoicePdf.cshtml"
                                                                                            Write(Localizer["Total"].Value);

#line default
#line hidden
#nullable disable
                WriteLiteral("</td>\r\n                        <td class=\"td\" style=\"text-align:right;font-size:16px;font-weight:bold;\">\r\n");
#nullable restore
#line 286 "D:\Project\abledocs\abledoc\Views\PendingInvoices\GenerateInvoicePdf.cshtml"
                              

                                var totalAmount = taxTotal + subTotal;
                                

#line default
#line hidden
#nullable disable
#nullable restore
#line 289 "D:\Project\abledocs\abledoc\Views\PendingInvoices\GenerateInvoicePdf.cshtml"
                            Write(country_currency_symbol+""+totalAmount.ToString("#,##0.00"));

#line default
#line hidden
#nullable disable
#nullable restore
#line 289 "D:\Project\abledocs\abledoc\Views\PendingInvoices\GenerateInvoicePdf.cshtml"
                                                                                              ;
                            

#line default
#line hidden
#nullable disable
                WriteLiteral("                        </td>\r\n                    </tr>\r\n                </table>\r\n\r\n            </td>\r\n        </tr>\r\n    </table>\r\n");
            }
            );
            __Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.Razor.TagHelpers.BodyTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_Razor_TagHelpers_BodyTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n</html>");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public IViewLocalizer Localizer { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<GenerateInvoicePdf> Html { get; private set; }
    }
}
#pragma warning restore 1591
