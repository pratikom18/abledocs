#pragma checksum "D:\Project\abledocs\abledoc\Views\Jobs\_POUpload.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "6b0c650bedb495113b41107850b9da784aec822a"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Jobs__POUpload), @"mvc.1.0.view", @"/Views/Jobs/_POUpload.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "D:\Project\abledocs\abledoc\Views\_ViewImports.cshtml"
using abledoc;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\Project\abledocs\abledoc\Views\_ViewImports.cshtml"
using abledoc.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "D:\Project\abledocs\abledoc\Views\Jobs\_POUpload.cshtml"
using Microsoft.AspNetCore.Mvc.Localization;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"6b0c650bedb495113b41107850b9da784aec822a", @"/Views/Jobs/_POUpload.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"a4541238ecace9825e26c3b3c9bf67b64ce13ac7", @"/Views/_ViewImports.cshtml")]
    public class Views_Jobs__POUpload : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<abledoc.Models.Jobs>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("type", "text", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("class", new global::Microsoft.AspNetCore.Html.HtmlString("form-control"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("POText"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_3 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("aria-describedby", new global::Microsoft.AspNetCore.Html.HtmlString("PO"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_4 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("name", new global::Microsoft.AspNetCore.Html.HtmlString("upload"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_5 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("id", new global::Microsoft.AspNetCore.Html.HtmlString("upload"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_6 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("data-ajax", new global::Microsoft.AspNetCore.Html.HtmlString("false"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_7 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("method", "POST", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_8 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("action", new global::Microsoft.AspNetCore.Html.HtmlString("/Jobs/upload"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_9 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("enctype", new global::Microsoft.AspNetCore.Html.HtmlString("multipart/form-data"), global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper;
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("<div class=\"modal fade\" id=\"bootstrap-modal\" role=\"dialog\">\r\n    <div class=\"modal-dialog\">\r\n        <div class=\"modal-content\">\r\n\r\n            <!-- Modal Header -->\r\n            <div class=\"modal-header\">\r\n                <h4 class=\"modal-title\">");
#nullable restore
#line 11 "D:\Project\abledocs\abledoc\Views\Jobs\_POUpload.cshtml"
                                   Write(Localizer["PO Upload"]);

#line default
#line hidden
#nullable disable
            WriteLiteral(@"</h4>
                <button type=""button"" class=""close"" data-dismiss=""modal"">&times;</button>
            </div>

            <!-- Modal body -->
            <div class=""modal-body"">

                <div class=""row"" id=""PODiv"">
                    <div class=""col-md-12"">
                        <div class=""form-group"">
                            <label class=""bmd-label-floating"">");
#nullable restore
#line 21 "D:\Project\abledocs\abledoc\Views\Jobs\_POUpload.cshtml"
                                                         Write(Localizer["PO"]);

#line default
#line hidden
#nullable disable
            WriteLiteral("</label>\r\n                            ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("input", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagOnly, "6b0c650bedb495113b41107850b9da784aec822a8067", async() => {
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.InputTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper.InputTypeName = (string)__tagHelperAttribute_0.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_1);
#nullable restore
#line 22 "D:\Project\abledocs\abledoc\Views\Jobs\_POUpload.cshtml"
__Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper.For = ModelExpressionProvider.CreateModelExpression(ViewData, __model => __model.POText);

#line default
#line hidden
#nullable disable
            __tagHelperExecutionContext.AddTagHelperAttribute("asp-for", __Microsoft_AspNetCore_Mvc_TagHelpers_InputTagHelper.For, global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_2);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_3);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
                        </div>
                    </div>

                </div>
                <div class=""row"">
                    <div class=""col-md-12"">
                        <div id=""UploadFile"" style=""width: 100%"">

                            <div id=""downloadBox"" class=""dropzone"" style=""position: relative;"">
                                ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("form", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "6b0c650bedb495113b41107850b9da784aec822a10307", async() => {
                WriteLiteral(@"
                                    <div id=""drop"" style=""padding: 0px;"">
                                        <a id=""uploadText"" class=""ui-link text-center"" style=""overflow: hidden; width: 90%; left: 5%;height:250px;"">
                                            <br />
                                            <br />
                                            <i class=""material-icons"" style=""font-size:50px"">cloud_upload</i>

                                            <div id=""uploadDragDrop"" style=""color: #000;"">
                                                <br>");
#nullable restore
#line 40 "D:\Project\abledocs\abledoc\Views\Jobs\_POUpload.cshtml"
                                               Write(Localizer["Drop"]);

#line default
#line hidden
#nullable disable
                WriteLiteral("\r\n                                                <br>");
#nullable restore
#line 41 "D:\Project\abledocs\abledoc\Views\Jobs\_POUpload.cshtml"
                                               Write(Localizer["Files Here"]);

#line default
#line hidden
#nullable disable
                WriteLiteral(@"
                                            </div>
                                        </a>
                                        <div class=""ui-input-text ui-body-inherit ui-corner-all ui-shadow-inset"" style=""border-color: transparent;display:none;"">
                                            <input type=""file"" name=""upl"" multiple=""true"">
                                        </div>
                                    </div>
                                    <ul id=""uploadedFiles"" style=""overflow-y: scroll; height: 250px; margin-left:-9%""></ul>
");
                WriteLiteral("                                ");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.FormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.RenderAtEndOfFormTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_RenderAtEndOfFormTagHelper);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_4);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_5);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_6);
            __Microsoft_AspNetCore_Mvc_TagHelpers_FormTagHelper.Method = (string)__tagHelperAttribute_7.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_7);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_8);
            __tagHelperExecutionContext.AddHtmlAttribute(__tagHelperAttribute_9);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n                                <input type=\"hidden\" id=\"uploadFlag\"");
            BeginWriteAttribute("value", " value=\"", 2944, "\"", 2967, 1);
#nullable restore
#line 51 "D:\Project\abledocs\abledoc\Views\Jobs\_POUpload.cshtml"
WriteAttributeValue("", 2952, ViewBag.Status, 2952, 15, false);

#line default
#line hidden
#nullable disable
            EndWriteAttribute();
            WriteLiteral(@" />
                            </div>


                        </div>
                    </div>

                </div>




                <div class=""card-footer text-right"">
                    <button type=""button"" class=""btn btn-success btn-primary-1 left"" id=""uploads"" data-toggle=""modal"">
                        <i class=""fa fa-upload""></i> ");
#nullable restore
#line 65 "D:\Project\abledocs\abledoc\Views\Jobs\_POUpload.cshtml"
                                                Write(Localizer["Save and close"]);

#line default
#line hidden
#nullable disable
            WriteLiteral("\r\n                    </button>\r\n                    <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\"><i class=\"fa fa-times-circle\"></i> ");
#nullable restore
#line 67 "D:\Project\abledocs\abledoc\Views\Jobs\_POUpload.cshtml"
                                                                                                                     Write(Localizer["Cancel"]);

#line default
#line hidden
#nullable disable
            WriteLiteral(@"</button>
                </div>


            </div>

        </div>
    </div>
</div>
<style type=""text/css"">
    #uploadText {
        width: 100%;
        position: absolute;
        left: 0px;
    }

    #upload ul li, #upload ul li {
        top: 0px;
        height: 75px;
        /*  overflow-y: scroll;*/
    }
</style>
<script type=""text/javascript"">

    $(""#uploadText"").click(function () {
        // creating input on-the-fly
        var input = $(document.createElement(""input""));
        input.attr(""type"", ""file"");
        input.attr(""id"", ""fileToUpload"");
        input.attr(""onchange"", ""fileToUpload(this)"");
        input.attr(""multiple"", ""true"");

        input.trigger(""click""); // opening dialog


        return true;


    });

    var selectedFiles = [];

    function fileToUpload(input) {
       // debugger;
        var file = input.files;


        if (file.length > 1) {
            for (var i = 0; i < file.length; i++) {
                var f");
            WriteLiteral(@"iles = file[i];//[0];
               // debugger;
                selectedFiles.push(files);
                $(""#uploadText"").css('background-color', '');
                $(""#uploadText i"").css('background-color', '');
                $(""#uploadDragDrop"").css('background-color', '');
                $(""#uploadedFiles"").append(""<li class='success' style='top:0px;height:50px;color:white;background-color:#1883C6B3;background-image: -webkit-linear-gradient(top, #1883C6B3, #1883C6);'>"" + files.name + ""<br/>"" + files.size + ""</li>"");


            }
        } else {
            var files = file[0];
            selectedFiles.push(files);
            $(""#uploadText"").css('background-color', '');
            $(""#uploadText i"").css('background-color', '');
            $(""#uploadDragDrop"").css('background-color', '');
            $(""#uploadedFiles"").append(""<li class='success' style='top:0px;height:50px;color:white;background-color:#1883C6B3;background-image: -webkit-linear-gradient(top, #1883C6B3, #1883");
            WriteLiteral(@"C6);'>"" + files.name + ""<br/>"" + files.size + ""</li>"");

        }

    }


    var JobID = parseInt($(""#JobID"").val());
    var uploadFlag = $(""#uploadFlag"").val();
    var flag = $(""#flag"").val();

    var FileID = parseInt($(""#fileid"").val());
        var FileType = ""OTHER"" //$(""#Type"").val();
        var selectedFiles=[];
        $(document).ready(function () {
            $(""#uploads"").click(function () {
                var POText = $(""#POText"").val();

                var uploadstatus = """";
                var uploadpotext = """";
                var uploadhtml = """";
                var uploadmsg = """";
                var count = 1;




           // data.append(""state"", FileType)
            //data.append(""qcType"", """")

        //        debugger;
        //for (var i=0; i < selectedFiles.length; i++) {
        //    debugger;
        //    if (selectedFiles[i].length == 1) {
        //        var files = selectedFiles[i][0]
        //        data.append(files.name, fi");
            WriteLiteral(@"les);
        //    } else if (selectedFiles[i].length > 1) {
        //        var files = selectedFiles[i]
        //        for (var j = 0; j < files.length; j++) {
        //            data.append(files[j].name, files[j]);
        //        }
        //    }

        //    }
                if (selectedFiles.length > 1) {
                    for (var i = 0; i < selectedFiles.length; i++) {
                        var files = selectedFiles[i];//[0]
                        var data = new FormData();
                        data.append(""Add_JobID"", JobID)
                        data.append(""Add_FileID"", FileID)
                        data.append(""uploadFlag"", uploadFlag)
                        data.append(""POText"", POText)
                        data.append(""flag"", flag)
                        data.append(files.name, files);

                        jqxhr = $.ajax({
                            type: ""POST"",
                            url: '");
#nullable restore
#line 189 "D:\Project\abledocs\abledoc\Views\Jobs\_POUpload.cshtml"
                             Write(Url.Action("Upload", "Jobs"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"',
                            contentType: false,
                            processData: false,
                            dataType:""JSON"",
                            data: data,
                            success: function (result) {
                                uploadstatus = result.status;
                                uploadpotext = result.potext;
                                uploadhtml = result.html;
                                uploadmsg = result.msg;

                                count = i;


                            },
                            error: function () {
                            alert(""There was error uploading files!"");
                            }
                        }).done(function (done) {



                        });
                    }

                    jqxhr.always(function () {
                        if (uploadstatus != """") {
                            $(""#filesRefresh"").html(uploadhtml);

                      ");
            WriteLiteral(@"      sourceDatatable();

                            fileTotalPageCount();

                            if (uploadstatus == ""sourceFile"") {
                                //$(""#sourceBtn"").click();
                                uploadCategory(""source"", $(""#sourceBtn""));
                                msg = ""Source File Uploaded successfully."";
                            } else if (uploadstatus == ""otherFile"") {
                                //$(""#othersBtn"").click();
                                uploadCategory(""others"", $(""#othersBtn""));
                                $(""#POTextJob"").val(uploadpotext);
                                msg = ""Other File Uploaded successfully."";
                            } else if (uploadstatus == ""referenceFile"") {
                                //$(""#referenceBtn"").click();
                                uploadCategory(""reference"", $(""#referenceBtn""));
                                msg = ""Reference File Uploaded successfully."";
              ");
            WriteLiteral(@"              }
                            $.notify({
                                icon: 'add_alert',
                                title: '<strong>Success!</strong>',
                                message: count + "" "" + uploadmsg
                            }, {
                                type: 'success'
                            });

                            $('#bootstrap-modal').modal('hide');


                        }
                    });
                    //loop end
");
            WriteLiteral(@"//end


                } else {
                    var files = selectedFiles[0];
                    //data.append(files.name, files);
                    var data = new FormData();
                    data.append(""Add_JobID"", JobID)
                    data.append(""Add_FileID"", FileID)
                    data.append(""uploadFlag"", uploadFlag)
                    data.append(""POText"", POText)
                    data.append(""flag"", flag)
                    data.append(files.name, files);

                    $.ajax({
            type: ""POST"",
            url: '");
#nullable restore
#line 273 "D:\Project\abledocs\abledoc\Views\Jobs\_POUpload.cshtml"
             Write(Url.Action("Upload", "Jobs"));

#line default
#line hidden
#nullable disable
            WriteLiteral(@"',
            contentType: false,
            processData: false,
            dataType:""JSON"",
            data: data,
            success: function (result) {

                uploadstatus = result.status;
                uploadpotext = result.potext;
                uploadhtml = result.html;
                uploadmsg = result.msg;
                count = 1;

                $(""#filesRefresh"").html(uploadhtml);

                sourceDatatable();

                fileTotalPageCount();

                if (uploadstatus == ""sourceFile"") {
                    //$(""#sourceBtn"").click();
                    uploadCategory(""source"", $(""#sourceBtn""));
                    msg = ""Source File Uploaded successfully."";
                } else if (uploadstatus == ""otherFile"") {
                    //$(""#othersBtn"").click();
                    uploadCategory(""others"", $(""#othersBtn""));
                    $(""#POTextJob"").val(uploadpotext);
                    msg = ""Other File Uploaded successf");
            WriteLiteral(@"ully."";
                } else if (uploadstatus == ""referenceFile"") {
                    //$(""#referenceBtn"").click();
                    uploadCategory(""reference"", $(""#referenceBtn""));
                    msg = ""Reference File Uploaded successfully."";
                }
                $.notify({
                    icon: 'add_alert',
                    title: '<strong>Success!</strong>',
                    message: count + "" "" + uploadmsg
                }, {
                    type: 'success'
                });

                $('#bootstrap-modal').modal('hide');




            },
            error: function () {
            alert(""There was error uploading files!"");
            }
            });
                }






            });
});

</script>
");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public IViewLocalizer Localizer { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<abledoc.Models.Jobs> Html { get; private set; }
    }
}
#pragma warning restore 1591
